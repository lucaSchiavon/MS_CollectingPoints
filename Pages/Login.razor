@layout LoginLayout
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager


@using MS_CollectingPoints.DataLayer.Data.Entities
@using MS_CollectingPoints.Data;
@using System.Security.Claims;

@page "/"
@*<div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight:bold; color:purple">Book Stores Login</h3>
    </div>
    <div>
        <br />
    </div>
    <div class="col-12 row">
        <input class="form-control col-12" placeholder="email address" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password" class="form-control col-12" placeholder="password" />
    </div>
    <br />
    <div class="col-12 row">
        <span class="col-12"></span>
        <input type="submit" class="form-control col-6 btn btn-primary" value="Login" />
        <a href="/signup" class="col-3">Sign up</a>
    </div>
    <br />
    <div class="col-12 row" style="text-align:left; font-weight:bold">
        <span class="col-12"></span>
    </div>*@


<div class="wrapper fadeInDown">
    <div id="formContent">
        <!-- Tabs Titles -->
        <!-- Icon -->
        <div class="fadeIn first">
            <img src="http://danielzawadzki.com/codepen/01/icon.svg" id="icon" alt="User Icon" />
        </div>

        <!-- Login Form -->
        <EditForm Model="@user" OnValidSubmit="@ValidateUser">
          
          
            <input type="text" id="login" class="fadeIn second" @bind="user.UserName" name="login" placeholder="login">
            <input type="text" id="password" class="fadeIn third" @bind="user.Password" name="login" placeholder="password">
            @if (MessageIsVisible)
            {
                <div class="alert alert-danger msg-login" role="alert">
                    @Message
                </div>
            }


            <input type="submit" class="fadeIn fourth" value="Log In">

        </EditForm>
        @*<!-- Remind Passowrd-->
            <div id="formFooter">
                <a class="underlineHover" href="#">Forgot Password?</a>
            </div>*@

    </div>
</div>
@code {
    private LoginVM user;
    private string Message;
    private bool MessageIsVisible;
    ClaimsPrincipal claimsPrincipal;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    protected override Task OnInitializedAsync()
    {
        user = new LoginVM();
        return base.OnInitializedAsync();
       

    }

    private async Task<bool> ValidateUser()
    {
        //******************qui validiamo l'utente sfruttando l'asp net identity



        if (!string.IsNullOrEmpty(user.UserName) && !string.IsNullOrEmpty(user.Password))
        {


            CustomAuthenticationStateProvider objCustomAuthenticationStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;

            var userByEmail = await UserManager.FindByEmailAsync(user.UserName);

            if (userByEmail != null && await UserManager.CheckPasswordAsync(userByEmail, user.Password))
            {
                objCustomAuthenticationStateProvider.MarkUserAsAuthenticated(user.UserName);

                await localStorage.SetItemAsync("UserName", user.UserName);

                NavigationManager.NavigateTo("/index");

                return await Task.FromResult(true);
            }
            else
            {
                MessageIsVisible = true;
                Message = "Wrong credentials.";
                return await Task.FromResult(false);
            }

           

        }
        else
        {
            MessageIsVisible = true;
            Message = "Insert username and password.";
            return await Task.FromResult(false);
        }

    }
}
